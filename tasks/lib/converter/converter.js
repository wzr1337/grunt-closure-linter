/*
 * grunt-closure-linter
 * https://github.com/wzr1337/grunt-closure-linter
 *
 * Copyright (c) 2013-2014 Patrick Bartsch
 * Licensed under the MIT license.
 */

 'use strict';


var grunt = require('grunt'),
    _ = grunt.util._,
    path = require('path'),
    exec = require('child_process').exec;


/**
 * Converts Closure Linter results to JSLint XML format.
 * @param {string} results Results generated by the Closure Linter.
 * @param {!function} callback Operation callback.
 */
var jsLintConverter = function(results, callback) {
  var converterProcess, cmd;

  if (_.isFunction(callback)) {
    cmd = path.join(__dirname, 'jslint.py');

    converterProcess = exec(cmd, null,
      function(error, stdout) {
        if (!error) {
          callback(stdout);
        } else {
          // Error occured while converting. Just return the none
          // converted result intead.
          callback(results);
        }
      });

    // Pipe the linter results as input into the converter process
    converterProcess.stdin.end(results);

    //converterProcess.stdout.pipe(process.stdout);
    converterProcess.stderr.pipe(process.stderr);
  }
};


/**
 * Get the Closure Lint result converter for a given converter type.
 * @param {string} converterType Linter result converter type.
 */
 module.exports.getConverter = function(converterType) {
  switch(converterType) {
    case 'closure':
      return null;
    case 'jslint':
      return jsLintConverter;
    default:
      return null;
  }
 };
